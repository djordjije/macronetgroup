;WITH CTE AS
(
SELECT
si.ItemNumber AS [SKU],
si.ItemTitle AS [Title],
si.Weight AS [Weight],
CONVERT(VARCHAR(8), si.CreationDate, 1) AS [DateCreated],
si.PurchasePrice AS [PurchasePrice],
oi.fpricePerUnit AS [LastSoldPrice], si.RetailPrice AS [MSRP],
sl.Quantity AS [InventoryLevel], 
CONVERT(VARCHAR(8), p.LastChangeDate, 1) AS [Last Price Update]
FROM [Order] o
INNER JOIN OrderItem oi 
on o.pkOrderID = oi.fkOrderID
LEFT OUTER JOIN StockItem si 
on si.pkstockItemId = oi.fkStockItemID_processed
LEFT OUTER JOIN StockLevel sl on si.pkStockItemID = sl.fkStockItemId
INNER JOIN StockItem_Pricing p on si.pkStockItemID = p.fkStockItemId
WHERE si.bLogicalDelete = 0 
),
UPCS AS
(
SELECT DISTINCT si.ItemNumber AS 'SKU', si.ItemTitle AS 'Title', siep.ProperyValue AS 'UPC'
FROM StockItem si
LEFT OUTER JOIN StockItem_ExtendedProperties siep on si.pkStockItemID = siep.fkStockItemId
WHERE si.bLogicalDelete=0 AND siep.ProperyName LIKE 'UPC'
),

MPNS AS
(
SELECT DISTINCT si.ItemNumber AS 'SKU', si.ItemTitle AS 'Title', siep.ProperyValue AS 'Model'
FROM StockItem si
LEFT OUTER JOIN StockItem_ExtendedProperties siep on si.pkStockItemID = siep.fkStockItemId
WHERE si.bLogicalDelete=0 AND siep.ProperyName LIKE 'Model'
),
SIXTY AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -60, GETDATE()) AND si.bLogicalDelete=0
GROUP BY si.ItemNumber
),
THIRTY AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -30, GETDATE()) AND si.bLogicalDelete=0
GROUP BY si.ItemNumber
),
FIFTEEN AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -15, GETDATE()) AND si.bLogicalDelete=0
GROUP BY si.ItemNumber
),
SEVEN AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -7, GETDATE()) AND si.bLogicalDelete=0
GROUP BY si.ItemNumber
),
COST AS
(
SELECT si.ItemNumber AS 'SKU', 
CASE
WHEN sl.Quantity > 0 THEN sl.CurrentStockValue / sl.Quantity
WHEN sl.Quantity = 0 THEN 0
END AS 'Item Cost'
FROM StockItem si
LEFT OUTER JOIN StockLevel sl on si.pkStockItemID = sl.fkStockitemId
WHERE si.bLogicalDelete = 0 	
),
PO60 AS 
(
SELECT si.ItemNumber, SUM(pi.Quantity) AS 'PO 1-60' 
FROM StockItem si
LEFT OUTER JOIN PurchaseItem pi on si.pkStockItemID = pi.fkStockItemId
LEFT OUTER JOIN Purchase p on pi.fkPurchasId = p.pkPurchaseID
WHERE si.bLogicalDelete = 0 
AND pi.Quantity > 0 
AND p.DateOfDelivery >  DATEADD(day, -60, GETDATE())
GROUP BY si.ItemNumber
),
POALL AS 
(
SELECT si.ItemNumber, SUM(pi.Quantity) AS 'PO 61+' 
FROM StockItem si
LEFT OUTER JOIN PurchaseItem pi on si.pkStockItemID = pi.fkStockItemId
LEFT OUTER JOIN Purchase p on pi.fkPurchasId = p.pkPurchaseID
WHERE si.bLogicalDelete = 0 
AND pi.Quantity > 0 
GROUP BY si.ItemNumber
)

SELECT DISTINCT CTE.SKU, CTE.Title, UPCS.UPC AS 'UPC', MPNS.Model AS 'MPN', SEVEN.[# of orders] AS [Sold 1-7], FIFTEEN.[#
of orders] AS [Sold 1-15], THIRTY.[# of orders] AS [Sold 1-30], SIXTY.[# of orders] AS [Sold 1-60],
CTE.Weight, CTE.InventoryLevel, PO60.[PO 1-60], POALL.[PO 61+], COST.[Item Cost],  CTE.MSRP, CTE.DateCreated,
CTE.[Last Price Update] 
FROM CTE 
LEFT OUTER JOIN UPCS on CTE.SKU = UPCS.SKU 
LEFT OUTER JOIN MPNS on CTE.SKU = MPNS.SKU
LEFT OUTER JOIN SIXTY on CTE.SKU = SIXTY.SKU 
LEFT OUTER JOIN THIRTY on CTE.SKU = THIRTY.SKU 
LEFT OUTER JOIN FIFTEEN on CTE.SKU = FIFTEEN.SKU 
LEFT OUTER JOIN SEVEN on CTE.SKU = SEVEN.SKU 
LEFT OUTER JOIN COST on CTE.SKU = COST.SKU 
LEFT OUTER JOIN PO60 on CTE.SKU = PO60.ItemNumber
LEFT OUTER JOIN POALL on CTE.SKU = POALL.ItemNumber
