;WITH CTE AS
(
SELECT
si.ItemNumber AS [SKU],
si.ItemTitle AS [Title],
si.Weight AS [Weight],
DATEDIFF("d", si.CreationDate, GETDATE()) AS [Days Ago Created],
si.PurchasePrice AS [PurchasePrice],
DATEDIFF("d",o.dReceievedDate, GETDATE()) AS [Days Last Sold],
row_number() over (PARTITION BY si.ItemNumber, si.RetailPrice 
ORDER BY o.dReceievedDate DESC) rn,
oi.fpricePerUnit AS [LastSoldPrice], si.RetailPrice AS [MSRP],
sl.Quantity AS [InventoryLevel], 
CONVERT(VARCHAR(8), p.LastChangeDate, 1) AS [Last Price Update]
FROM [Order] o
INNER JOIN OrderItem oi 
on o.pkOrderID = oi.fkOrderID
LEFT OUTER JOIN StockItem si 
on si.pkstockItemId = oi.fkStockItemID_processed
LEFT OUTER JOIN StockLevel sl on si.pkStockItemID = sl.fkStockItemId
INNER JOIN StockItem_Pricing p on si.pkStockItemID = p.fkStockItemId
WHERE si.bLogicalDelete = 0 
),
UPCS AS
(
SELECT DISTINCT si.ItemNumber AS 'SKU', si.ItemTitle AS 'Title', siep.ProperyValue AS 'UPC'
FROM StockItem si
LEFT OUTER JOIN StockItem_ExtendedProperties siep on si.pkStockItemID = siep.fkStockItemId
WHERE si.bLogicalDelete=0 AND siep.ProperyName LIKE 'UPC'
),

MPNS AS
(
SELECT DISTINCT si.ItemNumber AS 'SKU', si.ItemTitle AS 'Title', siep.ProperyValue AS 'Model'
FROM StockItem si
LEFT OUTER JOIN StockItem_ExtendedProperties siep on si.pkStockItemID = siep.fkStockItemId
WHERE si.bLogicalDelete=0 AND siep.ProperyName LIKE 'Model'
),
SIXTY AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -60, GETDATE())
GROUP BY si.ItemNumber
),
THIRTY AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -30, GETDATE())
GROUP BY si.ItemNumber
),
FIFTEEN AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -15, GETDATE())
GROUP BY si.ItemNumber
),
SEVEN AS
(
SELECT si.ItemNumber AS [SKU], count(o.norderID) AS [# of orders]
FROM [Order] o
INNER JOIN OrderItem oi on o.pkOrderID = oi.fkOrderID 
LEFT OUTER JOIN StockItem si on si.pkstockItemId = oi.fkStockItemID_processed
WHERE o.dReceievedDate > DATEADD(day, -7, GETDATE())
GROUP BY si.ItemNumber
),
PRE_COST AS 
(
SELECT si.ItemNumber AS 'SKU', DATEDIFF("d", p.DateOfDelivery, GETDATE()) AS Days, CASE WHEN pi.Quantity = 0 THEN 0 ELSE pi.Cost/pi.Quantity END AS 'Item Cost', row_number() over (PARTITION BY si.ItemNumber ORDER BY DATEDIFF("d", p.DateOfDelivery, GETDATE()) ) rn
FROM Purchase p
LEFT OUTER JOIN PurchaseItem pi ON p.pkPurchaseID = pi.fkPurchasId
LEFT OUTER JOIN StockItem si on pi.fkStockitemID = si.pkStockitemID
WHERE si.bLogicalDelete = 0

),
COST AS
(
SELECT PRE_COST.SKU, PRE_COST.[Item Cost]
FROM PRE_COST
WHERE rn = 1
),
SIP AS 
(
SELECT si.ItemNumber AS 'SKU',
CASE WHEN DATEDIFF("d", sip.ModifiedDate, GETDATE())  < DATEDIFF("d", sip.LastChangeDate, GETDATE())  THEN DATEDIFF("d", sip.ModifiedDate, GETDATE())  ELSE DATEDIFF("d", sip.LastChangeDate, GETDATE()) END AS [Days],
row_number() over (PARTITION BY si.ItemNumber ORDER BY CASE WHEN DATEDIFF("d", sip.ModifiedDate, GETDATE())  < DATEDIFF("d", sip.LastChangeDate, GETDATE())  THEN DATEDIFF("d", sip.ModifiedDate, GETDATE())  ELSE DATEDIFF("d", sip.LastChangeDate, GETDATE()) END ) rn
FROM StockItem_Pricing sip
LEFT OUTER JOIN StockItem si on sip.fkStockitemId = si.pkStockItemID
WHERE si.bLogicalDelete = 0  
),
PRICING AS
(
SELECT SIP.SKU, SIP.Days AS [Last Price Update]
FROM SIP
WHERE rn = 1
),
SC AS 
(
SELECT si.ItemNumber AS 'SKU', sl.Quantity, CONVERT(VARCHAR(8), sc.StockChangeDateTime, 1) AS 'ChangeDate', DATEDIFF("d", sc.StockChangeDateTime, 
	GETDATE()) AS 'Days', sc.StockNow, row_number() over (PARTITION BY sc.fkStockItemId ORDER BY DATEDIFF("d", sc.StockChangeDateTime, GETDATE())) rn
FROM [StockChange] sc
LEFT OUTER JOIN StockItem si on sc.fkStockitemId = si.pkStockItemID
LEFT OUTER JOIN StockLevel sl on si.pkStockitemID = sl.fkStockItemId
LEFT OUTER JOIN StockLocation sloc on sl.fkStockLocationId = sloc.pkStockLocationId
WHERE si.bLogicalDelete = 0 AND sc.StockNow = 0 AND sl.Quantity = 0 AND sloc.Location = 'Default'
),
D0S AS
(
SELECT SC.SKU, SC.Quantity, SC.Days
FROM SC
WHERE rn = 1
)

SELECT DISTINCT CTE.SKU, CTE.Title, UPCS.UPC AS 'UPC', MPNS.Model AS 'MPN', SEVEN.[# of orders] AS [Sold 1-7], FIFTEEN.[#
of orders] AS [Sold 1-15], THIRTY.[# of orders] AS [Sold 1-30], SIXTY.[# of orders] AS [Sold 1-60],
CTE.[Days Last Sold], CTE.LastSoldPrice, CTE.Weight, CTE.InventoryLevel, COST.[Item Cost],  CTE.MSRP, D0S.Days AS 'Days Out Of Stock', CTE.[Days Ago Created],
PRICING.[Last Price Update] 
FROM CTE 
LEFT OUTER JOIN UPCS on CTE.SKU = UPCS.SKU 
LEFT OUTER JOIN MPNS on CTE.SKU = MPNS.SKU
LEFT OUTER JOIN SIXTY on CTE.SKU = SIXTY.SKU 
LEFT OUTER JOIN THIRTY on CTE.SKU = THIRTY.SKU 
LEFT OUTER JOIN FIFTEEN on CTE.SKU = FIFTEEN.SKU 
LEFT OUTER JOIN SEVEN on CTE.SKU = SEVEN.SKU 
LEFT OUTER JOIN COST on CTE.SKU = COST.SKU 
LEFT OUTER JOIN PRICING ON CTE.SKU = PRICING.SKU
LEFT OUTER JOIN D0S ON CTE.SKU = D0S.SKU
WHERE rn = 1
